第10次作业要求：

部分术语：本*作业要求*中所使用的部分术语的简单注释说明。
          1. 本说明通常用 N 表示数据集的规模
          2. 通常称图类型的对象为“图”，顶点类型的对象为“顶点”，边类型的对象为“边”
          3. 顶点内部标号使用 0, 1, ..., N-1 表示，而外部标号使用 1, 2, ..., N 表示

-----------------------------------------------------------------------------------------
任务一：
-----------------------------------------------------------------------------------------
目    的：建立 图类 的C++类 - 基于C++11语言规范标准
          为简单起见，以下用 图 来指代上述数据结构

类 型 名：graf 或 graph (建议)
          为简单起见，以下用 GRAF 来指代上述类型名
          另以 VTX 和 ARC 分别指代顶点类型和边类型

基本成分：适当设计以便支持各种图论算法
          1. VTX 类型: (建议)表示为基本数据(如数据集元素、元素相关
                             性辅助信息等)及邻居顶点序列数据结构
          2. ARC 类型: (建议)表示为基本数据(如权值等)边的端点信息
          3. GRAF类型: (建议)表示为顶点序列的数据结构

功能要求：1. 可有效声明图对象
          2. 可有效获得图的顶点数、边数、顶点(出/入)度数
          3. 可有效判定指定图是否为空图

-----------------------------------------------------------------------------------------
任务二：实现 “DAG的拓扑排序” 算法并讨论其时间复杂度
-----------------------------------------------------------------------------------------
目    的：对于给定标号为 1, 2, ..., N 的 N 个顶点的DAG，计算其顶点的拓扑全序序列。

数据规格：
 1. 输入：输入数据由两部分组成
          第一部分包含两个非负整数 N、M，其中 N 为给定图顶点个数，M 为其边数
          第二部分有 M 对不超过 N 的正整数 x、y，表示顶点 x 到顶点 y 之间有边
 2. 输出：对于给定的输入数据，输出一行以一个空格分隔的正整数，其恰好是输入数据
          所确定的有向无环图顶点集的拓扑全序序列。

数据样例：
 1. 输入:

17 22
1 4
2 4 2 5 2 6
4 3 4 8 4 9 4 10 4 11 4 12
5 11
6 7 6 10 6 11
9 14
10 13 10 15 10 16
11 12 11 16
15 14
16 17

 2. 输出：(注意，输出可能不唯一)

1 2 4 5 6 7 8 9 10 11 12 13 15 16 17 3 14

-----------------------------------------------------------------------------------------
任务三：实现 “Dijkstra” 算法
-----------------------------------------------------------------------------------------
目    的：对于标号为 1, 2, ..., N 的 N 个顶点的边赋权有向图以及源顶点 s，计算由 s 到其余
          所有顶点的最短路径

数据规格：
 1. 输入：输入数据由三部分组成
          第一部分包含两个非负整数 N、M，其中 N 为给定有向图顶点个数，M 为其边数
          第二部分有 M 个三元组 x、y、w，表示顶点 x 到顶点 y 有带实数权 w 的边
          第三部分为源顶点标号 s
 2. 输出：对于给定的输入数据，输出 N 行，每行的第一部分为一个顶点的标号 K，紧接一个空格后
          的第二部分是一个表示由源 s 到顶点 K 的最短路径长的实数，在一个空格后的第三部分
          是若干正整数，表示由源 s 到顶点 K 的一条最短路径的顶点序列

数据样例：
 1. 输入:

7 12
1 2 2
1 4 1
2 4 3
2 5 10
3 1 4
3 6 5
4 3 2
4 5 2
4 6 8
4 7 4
5 7 6
7 6 1
1

 2. 输出：(注意，输出可能不唯一)

1 0
2 2 1 2
3 3 1 4 3
4 1 1 4
5 3 1 4 5
6 6 1 4 7 6
7 5 1 4 7

